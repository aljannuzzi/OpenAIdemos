const fs = require("fs");
const { Configuration, OpenAIApi } = require("openai");
const config = require("./config.js");

const configuration = new Configuration({
  organization: config.organization,
  apiKey: config.apiKey,
});
const openai = new OpenAIApi(configuration);

// This is the main function that handles 'pull_request.opened' events
module.exports = (app) => {
  app.on("pull_request.opened", async (context) => {
    try {
      const { data: pullRequest } = await context.octokit.pulls.get({
        owner: context.payload.repository.owner.login,
        repo: context.payload.repository.name,
        pull_number: context.payload.pull_request.number,
      });

      const filesResponse = await context.octokit.pulls.listFiles({
        owner: context.payload.repository.owner.login,
        repo: context.payload.repository.name,
        pull_number: pullRequest.number,
      });

      const files = filesResponse.data;

      // Create a request string with the code changes
      const req = `Review the following code from a pull request:\n${files
        .map((file) => file.patch)
        .join("\n")}`;

      const response = await openai.createCompletion({
        model: "text-davinci-003",
        prompt: req,
        max_tokens: 1024,
        temperature: 0.7,
        stop: null,
      });

      const comment = context.issue({
        body: response.data.choices[0].text,
      });

      await context.octokit.issues.createComment(comment);
    } catch (error) {
      console.error("Error handling pull_request.opened:", error);
    }
  });
};
